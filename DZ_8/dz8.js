// Задача №1
// Напишите функцию, которая последовательно выводит в консоль числа 
// от 1 до 20, с интервалом между числами 1000мс. То есть, весь вывод должен 
// занимать 2000мс, в течение которых каждые 1000мс в консоли появляется 
// очередное число.
// Реализовать с помощью setInterval
// Реализовать с помощью setTimeout вместо setInterval

// console.log('zd1');
// counter = 1;
// setInterval(function() {
// if(counter==20) {counter=0} 
// console.log(++counter);
// }, 1000);
// let intervalId = setTimeout(sendMessege, 1000)
// function sendMessege() {
// console.log("funTimeout:" + counter);
// intervalId = setTimeout(sendMessege, 1000)
// }

// Задача №2
// Сделать светофор, который "зажигает" красный, желтый, зеленый свет попеременно.
// Написать функцию, которая в качестве аргументов принимает четыре числа.
// Первое число - сколько секунд будет ‘гореть’ красный.
// Второе число - сколько секунд будет ‘гореть’ желтый.
// Третье число - сколько секунд будет ‘гореть’ зеленый.
// Четвёртое число - на сколько будет включен светофор. 
// Функция при старте должна выводить в консоль сообщение ‘Светофор включен’ 
// и запускать таймер для выключения светофора через заданное, в качестве 
// четвёртого параметра, количество секунд. После выключения светофора, 
// вывести в консоль сообщение ‘Светофор выключен’. В течении времени 
// работы светофора в консоль должны выводится строки ‘зелёный’, ‘жёлтый’, 
// ‘красный’ по очереди с интервалами между цветами переданными в качестве 
// аргументов функции для каждого из цветов. (т.е. если зелёному был задан 
// интервал 3 сек., то жёлтый должен ‘загореться’, через 3 сек. 
// после зелёного и т.д)

// console.log('zd2');
// function trafficLight(redDuration, yellowDuration, greenDuration, totalDuration, callback) {
//   console.log('Светофор включен');

//   let elapsedTime = 0;

//   const intervalId = setInterval(() => {
//     elapsedTime++;

//     switch (true) {
//       case elapsedTime <= greenDuration:
//         callback('зеленый');
//         break;
//       case elapsedTime <= greenDuration + yellowDuration:
//         callback('желтый');
//         break;
//       case elapsedTime <= greenDuration + yellowDuration + redDuration:
//         callback('красный');
//         break;
//     }

//     if (elapsedTime >= totalDuration) {
//       clearInterval(intervalId);
//       console.log('Светофор выключен');
//     }
//   }, 1000);
// }

// trafficLight(3, 5, 8, 20, (color) => {  //запуск функции к,ж,з,всего
//   console.log(color);
// });

// Задача №3
// Напишите функцию, которая через prompt, предлагает пользователю 
// сделать ставку (ввести сумму денег, как ставка на спорт), 
// после ввода числа в prompt, выведите в консоль сообщение ‘Ваша ставка принята’. 
// Сгенерируйте случайное число в диапазоне от -5 до 5. Через 3 секунды выведите 
// сообщение в консоль с информацией о том, что пользователь “выиграл” или 
// “проиграл” с такой логикой: если случайное число отрицательное или равно 0 - 
// то пользователь "не угадал" со своей ставкой, выведите в консоль сообщение 
// ‘Вы проиграли. Ваши деньги сгорели.’ Если число положительное, то выведите 
// в консоль сообщение ‘Вы выиграли. Ваш выигрыш составляет { сумма выигрыша }’. 
// Для расчёта суммы выигрыша нужно умножить сумму ставки на случайно 
// сгенерированное число в диапазоне от -5 до 5.


function casino() {
  const bet = prompt('Сделайте ставку, введите сумму денег');
  if (isValidBet(bet)) {
    console.log("Ваша ставка принята");

      setTimeout(function() {
      const wager = generateRandomWager();

      if (wager <= 0) {
        console.log("Вы проиграли. Ваши деньги сгорели.");
      } else {
        console.log("Ваш выигрыш составляет " + (bet * wager).toFixed(1));
      }
    }, 3000);
  } else {
    alert('Было введено некорректное значение ставки, попробуйте еще раз');
    casino();
  }
}

function isValidBet(bet) {
  const parsedBet = parseFloat(bet);
  return !isNaN(parsedBet) && bet !== null && bet !== '';
}

function generateRandomWager() {
  return Math.random() * (5 - (-5)) + (-5);
}

casino();  //запуск функции  
